/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Forms;

import com.mysql.cj.jdbc.DatabaseMetaData;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;

/**
 *
 * @author codingharry
 */
public class Authentication extends javax.swing.JFrame {
    Connection connection;//Creating object of Connection class
    Statement statement;//Creating object of Statement class
    DatabaseMetaData metas;
    ResultSet tables;
    int flag=0;
    

    /**
     * Creates new form Authentication
     */
    public Authentication() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        usernameField = new javax.swing.JTextField();
        passwordField = new javax.swing.JPasswordField();
        submitAuth = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        passwordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordFieldActionPerformed(evt);
            }
        });

        submitAuth.setText("Submit");
        submitAuth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitAuthActionPerformed(evt);
            }
        });

        jLabel1.setText("Username");

        jLabel2.setText("Password");

        jLabel3.setText("WELCOME TO THE AUDIO PLAYER!");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(107, 107, 107)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(submitAuth)
                        .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(96, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addComponent(submitAuth)
                .addGap(85, 85, 85))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void passwordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordFieldActionPerformed

    private void submitAuthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitAuthActionPerformed
        if (evt.getSource() == submitAuth) {
 
            String userName = usernameField.getText().toString(); //getting text of username text field and storing it in a String variable
            String passWord = passwordField.getText().toString();
            
            
            
            try {
            connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/audioplayer", "root", "");//Crating connection with database
            metas = (DatabaseMetaData) connection.getMetaData();
            statement = connection.createStatement(); //creating statement object
            tables = metas.getTables(connection.getCatalog(), null, "users", null);
            
            String query = "SELECT * FROM users WHERE username = '" + userName + "' AND password = '" + passWord + "'";//Storing MySQL query in a string variable
            ResultSet resultSet = statement.executeQuery(query); //executing query and storing result in ResultSet
            String databaseSetup = "CREATE TABLE users (\n" +
                                        "  username varchar(16) NOT NULL,\n" +
                                        "  password varchar(32) NOT NULL\n" +
                                        ") ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n" +
                                        "\n" +
                                        "--\n" +
                                        "-- Άδειασμα δεδομένων του πίνακα users\n" +
                                        "--\n" +
                                        "\n" +
                                        "INSERT INTO users (username, password) VALUES\n" +
                                        "('admin', 'admin');\n" +
                                        "\n" +
                                        "--\n" +
                                        "-- Ευρετήρια για άχρηστους πίνακες\n" +
                                        "--\n" +
                                        "\n" +
                                        "--\n" +
                                        "-- Ευρετήρια για πίνακα users\n" +
                                        "--\n" +
                                        "ALTER TABLE users\n" +
                                        "  ADD PRIMARY KEY (username);\n" +
                                        "COMMIT;";
            
            while (resultSet.next()) {
             //Retrieving details from the database and storing it in the String variables
                String name = resultSet.getString("username");
                String pass = resultSet.getString("password");
                if (userName.equalsIgnoreCase(name) && passWord.equalsIgnoreCase(pass)) {
                    flag = 1;
                    System.out.println("The username you've entered is " + userName);
                    System.out.println("The password you've entered is " + passWord);
                    JOptionPane.showMessageDialog(null, "Login Successful");//When invalid username is entered
                    this.setVisible(false);
                    new MediaPlayer().setVisible(true);
                    break;
                }
                else {
                    System.out.println("The username or password you've entered is not available in the database");
                }
 
            }
 
            if (flag == 0) {
                JOptionPane.showMessageDialog(null, "No Such Username Or Password Found");//When invalid username is entered
            }
 
 
        } catch (SQLException throwables) {
            throwables.printStackTrace();
        }
           
            
        }
        
        
        
    }//GEN-LAST:event_submitAuthActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Authentication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Authentication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Authentication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Authentication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Authentication().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JButton submitAuth;
    private javax.swing.JTextField usernameField;
    // End of variables declaration//GEN-END:variables
}
