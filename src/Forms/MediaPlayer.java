/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Forms;

import client_server.musicPlayer;
import static client_server.musicPlayer.clip;
import java.awt.Font;
import java.io.File;
import java.nio.file.Files;
import javax.sound.sampled.FloatControl;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
/**
 *
 * @author codingharry
 */
public class MediaPlayer extends javax.swing.JFrame {

    /**
     * Creates new form MediaPlayer
     */
    public MediaPlayer() {
        initComponents();
        player.loadMusic(filepath);
    }
    static musicPlayer player = musicPlayer.getInstance();
    static String filepath = "./song.wav";
    static long clipTimePosition;
    
    static boolean isPlaying = true;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        playButton = new javax.swing.JButton();
        pauseButton = new javax.swing.JButton();
        loadButton = new javax.swing.JButton();
        inputFile = new javax.swing.JTextField();
        volumeUp = new javax.swing.JButton();
        volumeDown = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        showUsername = new javax.swing.JLabel();
        downloadButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        playButton.setText("PLAY");
        playButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playButtonActionPerformed(evt);
            }
        });

        pauseButton.setText("PAUSE");
        pauseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pauseButtonActionPerformed(evt);
            }
        });

        loadButton.setText("LOAD");
        loadButton.setToolTipText("");
        loadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadButtonActionPerformed(evt);
            }
        });

        volumeUp.setText("+");
        volumeUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volumeUpActionPerformed(evt);
            }
        });

        volumeDown.setText("-");
        volumeDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volumeDownActionPerformed(evt);
            }
        });

        jLabel1.setText("Volume");

        downloadButton.setText("Download");
        downloadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downloadButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(124, 124, 124)
                        .addComponent(volumeUp)
                        .addGap(61, 61, 61)
                        .addComponent(volumeDown))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(142, 142, 142)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(inputFile, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pauseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(playButton, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(175, 175, 175)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(showUsername)))
                .addContainerGap(142, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(loadButton)
                        .addGap(69, 69, 69))
                    .addComponent(downloadButton, javax.swing.GroupLayout.Alignment.TRAILING)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(showUsername)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loadButton)
                    .addComponent(inputFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(playButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pauseButton)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(volumeUp)
                    .addComponent(volumeDown))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addComponent(downloadButton))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void playButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playButtonActionPerformed
        player.clip.setMicrosecondPosition(0);
        clipTimePosition = 0;
        player.clip.start();
        
        // Creating an instance of the DedaultListModel object
        DefaultListModel listModel;
        listModel = new DefaultListModel(); // assigning listModel as the local variable for the listing
                
        
        String str = filepath;
        
        
        
        String arrOfStr = str.substring(41);        
        Font myFont = new Font("Courier", Font.BOLD | Font.ITALIC ,20);
 
            System.out.println("Playlist: " + arrOfStr);
            
    }//GEN-LAST:event_playButtonActionPerformed

    private void pauseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pauseButtonActionPerformed
        if (isPlaying) {
            clipTimePosition = player.clip.getMicrosecondPosition();
            player.clip.stop();
            pauseButton.setText("Resume");
        }
        else {
            player.clip.setMicrosecondPosition(clipTimePosition);
            player.clip.start();
            pauseButton.setText("Pause");
        }
        isPlaying = !isPlaying;
    }//GEN-LAST:event_pauseButtonActionPerformed

    private void loadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadButtonActionPerformed
        filepath = inputFile.getText();
        player.clip.stop();
        player.clip.setMicrosecondPosition(0);
        clipTimePosition = 0;
        player.loadMusic(filepath);
    }//GEN-LAST:event_loadButtonActionPerformed

    private void volumeUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volumeUpActionPerformed
        FloatControl gainControl = 
    (FloatControl) clip.getControl(FloatControl.Type.MASTER_GAIN);
    
        if(isPlaying)
        {
            gainControl.setValue(gainControl.getValue() + 1.0f);
            System.out.println("Volume: " + gainControl.getValue());
            if (gainControl.getValue() > 6.0f)
            {
                gainControl.setValue(6.0f);
                System.out.println("You've reached the limit!");
                System.out.println("Volume: " + gainControl.getValue());
                JFrame jFrame = new JFrame();
                JOptionPane.showMessageDialog(jFrame, """
                                                      You have reached the volume limit! (The higher volume limit is 6.0 decibels!)
                                                      Current Volume: """ + gainControl.getValue());
            }
        }
    }//GEN-LAST:event_volumeUpActionPerformed

    private void volumeDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volumeDownActionPerformed
        FloatControl gainControl = 
        (FloatControl) clip.getControl(FloatControl.Type.MASTER_GAIN);
        
        if(isPlaying)
        {
            gainControl.setValue(gainControl.getValue() - 1.0f);
            System.out.println("Volume: " + gainControl.getValue());
            if (gainControl.getValue() < -10.0f)
            {
                gainControl.setValue(-10.0f);
                System.out.println("You've reached the limit!");
                System.out.println("Volume: " + gainControl.getValue());
                JFrame jFrame = new JFrame();
                JOptionPane.showMessageDialog(jFrame, """
                                                      You have reached the volume limit! (The lower volume limit is -10.0 decibels!)
                                                      Current Volume: """ + gainControl.getValue());
            }
        }
    }//GEN-LAST:event_volumeDownActionPerformed

    private void downloadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downloadButtonActionPerformed
        try {             
                         
            File dirFrom = new File(filepath);
            System.out.println(dirFrom);
            String home = System.getProperty("user.home");             
            File dirTo = new File(home + "/Desktop/" + filepath);             
            System.out.println(dirFrom);             
            System.out.println(dirTo);             
            Files.copy(dirFrom.toPath(), dirTo.toPath());  
            JOptionPane.showMessageDialog(null, "File Downloaded!");
        } 
        catch (Exception e) {
            System.out.println(e.getMessage());         
        }
    }//GEN-LAST:event_downloadButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MediaPlayer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MediaPlayer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MediaPlayer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MediaPlayer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MediaPlayer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton downloadButton;
    private javax.swing.JTextField inputFile;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton loadButton;
    private javax.swing.JButton pauseButton;
    private javax.swing.JButton playButton;
    private javax.swing.JLabel showUsername;
    private javax.swing.JButton volumeDown;
    private javax.swing.JButton volumeUp;
    // End of variables declaration//GEN-END:variables
}
